name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    # Install X11 dependencies (Linux)
    - name: Install X11 dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev

    # Install OpenGL dependencies (Linux)
    - name: Install OpenGL dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y libgl1-mesa-dev

    # Build Luau (Windows)
    - name: Build Luau (Windows)
      if: matrix.os == 'windows-latest'
      run: librebox/build_dependencies.bat

    # Build Luau (Linux)
    - name: Build Luau (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        set -e
        SCRIPT_DIR="${GITHUB_WORKSPACE}/librebox"
        LUAU_SOURCE_DIR="$SCRIPT_DIR/luau"
        LUAU_BUILD_DIR="$LUAU_SOURCE_DIR/build"
        VENDOR_DIR="$SCRIPT_DIR/third_party/vendor"

        mkdir -p "$LUAU_BUILD_DIR"
        cd "$LUAU_BUILD_DIR"

        cmake "$LUAU_SOURCE_DIR" \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX="$VENDOR_DIR/luau"

        cmake --build . --config Release
        cmake --install . --config Release

    # Build Raylib (Windows)
    - name: Build Raylib (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        git clone https://github.com/raysan5/raylib.git librebox/third_party/vendor/raylib
        mkdir librebox/third_party/vendor/raylib/build
        cd librebox/third_party/vendor/raylib/build
        cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX=../
        cmake --build . --config Release
        cmake --install . --config Release

    # Build Raylib (Linux)
    - name: Build Raylib (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        set -e
        SCRIPT_DIR="${GITHUB_WORKSPACE}/librebox"
        RAYLIB_SOURCE_DIR="$SCRIPT_DIR/third_party/vendor/raylib"
        RAYLIB_BUILD_DIR="$RAYLIB_SOURCE_DIR/build"
        RAYLIB_INSTALL_DIR="$RAYLIB_SOURCE_DIR"

        if [ ! -d "$RAYLIB_SOURCE_DIR/.git" ]; then
          rm -rf "$RAYLIB_SOURCE_DIR"
          git clone https://github.com/raysan5/raylib.git "$RAYLIB_SOURCE_DIR"
        fi

        mkdir -p "$RAYLIB_BUILD_DIR"
        cd "$RAYLIB_BUILD_DIR"

        cmake "$RAYLIB_SOURCE_DIR" \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX="$RAYLIB_INSTALL_DIR"

        cmake --build . --config Release
        cmake --install . --config Release

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}/librebox

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
